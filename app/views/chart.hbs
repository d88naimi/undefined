<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/4.8.0/d3.min.js"></script>
<h1>Hello!! I am a chart view</h1>

<div id="chart"></div>

<script>
  const languageData = [
    { label: 'Javascript', count: 26 },
    { label: 'C++', count: 15 },
    { label: 'Ruby', count: 10 },
    { label: 'Scala', count: 8 },
    { label: 'Matlab', count: 6 },
    { label: 'Haskell', count: 12 },
    { label: 'Python', count: 4 }
  ];

  const tooltip = d3.select('#chart')
      .append('div')
      .attr('class', 'tooltip-d3');
  tooltip.append('div')
      .attr('class', 'label-d3');

  tooltip.append('div')
      .attr('class', 'count');

  //    tooltip.append('div')
  //        .attr('class', 'percent');


  const width = 360;
  const height = 360;
  const donutWidth = 75;
  const radius = Math.min(width, height) / 2;
  const color = d3.scaleOrdinal(d3.schemeCategory20);
  const svg = d3.select('#chart')
      .append('svg')
      .attr('width', width)
      .attr('height', height)
      .append('g')
      .attr('transform', 'translate(' + (width / 2) +  ',' + (height / 2) + ')');
  const arc = d3.arc()
      .innerRadius(radius - donutWidth)
      .outerRadius(radius);

  const pie = d3.pie()
      .value(function(d) { return d.count; })
      .sort(null);

  const g = svg.selectAll('path')
      .data(pie(languageData))
      .enter().append('g');

  const path = g
      .append('path')
      .attr('d', arc)
      .attr('fill', function(d, i) {
        return color(d.data.label);
      });
  //      .each(function(d) { this._current = d; });

  //label inside arc
  g.append('text')
      .attr("transform", function(d) { //set the label's origin to the center of the arc
        return "translate(" + arc.centroid(d) + ")";
      })
      .attr("text-anchor", "middle") //center the text on it's origin
      .style("fill", "white")
      .style("font", "bold 12px")
      .text(function(d) {
        const total = d3.sum(languageData.map(d => d.count));
        const percent = Math.round(1000 * d.data.count / total) / 10;
        return percent + '%';
      });

  path.on('mouseover', function(d) {
//      const total = d3.sum(languageData.map(function(d) {
//        return d.count;
//      }));
//      const percent = Math.round(1000 * d.data.count / total) / 10;
    tooltip.select('.label-d3').html(d.data.label);
    tooltip.select('.count').html(d.data.count);
//      tooltip.select('.percent').html(percent + '%');
    tooltip.style('display', 'block');
  });

  path.on('mouseout', function() {
    tooltip.style('display', 'none');
  });

  path.on('mousemove', function(d) {
    tooltip.style('top', (d3.event.layerY + 10) + 'px')
        .style('left', (d3.event.layerX + 10) + 'px');
  });

  const legendRectSize = 18;
  const legendSpacing = 4;
  const legend = svg.selectAll('.legend')
      .data(color.domain())
      .enter()
      .append('g')
      .attr('class', 'legend')
      .attr('transform', function(d, i) {
        const height = legendRectSize + legendSpacing;
        const offset =  height * color.domain().length / 2;
        const horz = -2 * legendRectSize;
        const vert = i * height - offset;
        return 'translate(' + horz + ',' + vert + ')';
      });

  legend.append('rect')
      .attr('width', legendRectSize)
      .attr('height', legendRectSize)
      .style('fill', color)
      .style('stroke', color);

  legend.append('text')
      .attr('x', legendRectSize + legendSpacing)
      .attr('y', legendRectSize - legendSpacing)
      .text(function(d) { return d; });



</script>
<style>
  .legend, .percent {
    font-size: 12px;
  }
  rect {
    stroke-width: 2;
  }
  #chart {
    height: 360px;
    position: relative;
    width: 360px;
  }

  .tooltip-d3 {
    background: #eee;
    box-shadow: 0 0 5px #999999;
    color: #333;
    display: none;
    font-size: 12px;
    left: 130px;
    padding: 10px;
    position: absolute;
    text-align: center;
    top: 95px;
    width: 80px;
    z-index: 10;
  }
</style>